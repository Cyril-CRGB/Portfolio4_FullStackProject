# Generated by Django 3.2.22 on 2024-10-12 19:50

import cloudinary.models
import django.core.validators
from django.db import migrations, models
import hrmanager.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GeneratorData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gd_year', models.IntegerField()),
                ('gd_month', models.CharField(max_length=20)),
                ('gd_title', models.CharField(max_length=255)),
                ('gd_first_name', models.CharField(max_length=255)),
                ('gd_last_name', models.CharField(max_length=255)),
                ('gd_start_date', models.DateField(blank=True, null=True)),
                ('gd_end_date', models.DateField(blank=True, default=None, null=True)),
                ('gd_first_day_of_the_month_date', models.DateField(blank=True, null=True)),
                ('gd_last_day_of_the_month_date', models.DateField(blank=True, null=True)),
                ('gd_worked_days', models.IntegerField(default=0)),
                ('gd_base_monthly_salary', models.IntegerField(default=0)),
                ('gd_monthly_salary', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('gd_child_allocation_1', models.IntegerField(default=0)),
                ('gd_child_allocation_2', models.IntegerField(default=0)),
                ('gd_total_monthly_wage', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('gd_total_monthly_wage_for_social_insurance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('gd_total_monthly_wage_for_social_taxes', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('gd_avs_item', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('gd_ac_item', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('gd_ac2_item', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('gd_laap_item', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('gd_laanp_item', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('gd_laac_item', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('gd_laace_item', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('gd_amat_item', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('gd_alfa_item', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('gd_apgmal_item', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('gd_alpetiteenfance_item', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('gd_total_social_deduction', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('gd_employees_phone_allocation', models.PositiveSmallIntegerField(default=0)),
                ('gd_employees_representation_allocation', models.PositiveSmallIntegerField(default=0)),
                ('gd_expense_report', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('gd_public_transportation_fees', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('gd_paid_salary', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('gd_monthly_table_saved', models.DateTimeField(auto_now_add=True)),
                ('gd_monthly_table_paid', models.DateTimeField(blank=True, default=None, editable=False, null=True)),
                ('gd_extraordinary_salary', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('gd_LPP_deduction_employee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('gd_total_deduction_employee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('gd_correction_non_financial_wage', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='salary_items',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('validity_year', models.CharField(default='', max_length=4, unique=True)),
                ('avs_item', models.DecimalField(decimal_places=2, max_digits=4)),
                ('ac_item', models.DecimalField(decimal_places=2, max_digits=4)),
                ('ac2_item', models.DecimalField(decimal_places=2, max_digits=4)),
                ('laap_item', models.DecimalField(decimal_places=2, max_digits=4)),
                ('laanp_item', models.DecimalField(decimal_places=2, max_digits=4)),
                ('laac_item', models.DecimalField(decimal_places=2, max_digits=4)),
                ('laace_item', models.DecimalField(decimal_places=2, max_digits=4)),
                ('amat_item', models.DecimalField(decimal_places=2, max_digits=4)),
                ('alfa_item', models.DecimalField(decimal_places=2, max_digits=4)),
                ('apgmal_item', models.DecimalField(decimal_places=2, max_digits=4)),
                ('alpetiteenfance_item', models.DecimalField(decimal_places=2, max_digits=4)),
                ('child_alloc_1_item', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, null=True)),
                ('child_alloc_2_item', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, null=True)),
            ],
            options={
                'ordering': ['validity_year'],
            },
        ),
        migrations.CreateModel(
            name='Employees',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', error_messages={'unique': 'An employee with this title already exists.'}, max_length=200, unique=True)),
                ('first_name', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator(message='Only alphabetic characteres are allowed.', regex='^[a-zA-Z]+$'), hrmanager.validators.validate_not_blank_nor_null])),
                ('last_name', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator(message='Only alphabetic characteres are allowed.', regex='^[a-zA-Z]+$'), hrmanager.validators.validate_not_blank_nor_null])),
                ('employees_gender', models.CharField(choices=[('F', 'Female'), ('M', 'Male'), ('O', 'Other')], max_length=1)),
                ('employees_marital_status', models.CharField(choices=[('M', 'Married'), ('D', 'Divorced'), ('S', 'Single'), ('P', 'Partnership'), ('O', 'Other')], max_length=1)),
                ('children_for_allocations_type_1', models.CharField(blank=True, choices=[('0', '0'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=2, validators=[hrmanager.validators.validate_not_blank_nor_null])),
                ('children_for_allocations_type_2', models.CharField(blank=True, choices=[('0', '0'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')], max_length=2, validators=[hrmanager.validators.validate_not_blank_nor_null])),
                ('birth_date', models.DateField(blank=True, null=True, validators=[hrmanager.validators.validate_birth_date_in_past, hrmanager.validators.validate_date_format, hrmanager.validators.validate_not_blank_nor_null])),
                ('employees_age', models.PositiveSmallIntegerField(blank=True, null=True, validators=[hrmanager.validators.validate_not_blank_nor_null])),
                ('email_adress', models.EmailField(blank=True, error_messages={'unique': 'An employee with this email address already exists.'}, max_length=254, null=True, unique=True, validators=[django.core.validators.EmailValidator(), hrmanager.validators.validate_not_blank_nor_null])),
                ('phone_number', models.CharField(blank=True, help_text='Format: 0041/00.000.00.00', max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Phone number must be in the format 00041/00.000.00.00', regex='^0041/\\d{2}\\.\\d{3}\\.\\d{2}\\.\\d{2}$'), hrmanager.validators.validate_not_blank_nor_null])),
                ('emergency_contact', models.CharField(blank=True, max_length=30, null=True)),
                ('emergency_phonenumber', models.CharField(blank=True, help_text='Format: 0041/00.000.00.00', max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Phone number must be in the format 00041/00.000.00.00', regex='^0041/\\d{2}\\.\\d{3}\\.\\d{2}\\.\\d{2}$')])),
                ('employee_picture', cloudinary.models.CloudinaryField(default='placeholder', max_length=255, verbose_name='image')),
                ('social_security_number', models.CharField(error_messages={'unique': 'An employee with this Social Security Number already exists.'}, max_length=13, unique=True, validators=[hrmanager.validators.validate_social_security_number, hrmanager.validators.validate_not_blank_nor_null])),
                ('employees_bankaccount', models.CharField(blank=True, help_text='Format: CH00 0000 0000 0000 0000 0', max_length=21, null=True, validators=[django.core.validators.RegexValidator(message='Bank account number must be in the format CH00 0000 0000 0000 0000 0', regex='^CH\\d{2} \\d{4} \\d{4} \\d{4} \\d{4} \\d{1}$'), hrmanager.validators.validate_not_blank_nor_null])),
                ('start_date', models.DateField(blank=True, null=True, validators=[hrmanager.validators.validate_not_blank_nor_null])),
                ('end_date', models.DateField(blank=True, null=True)),
                ('employees_holiday_rights', models.IntegerField(blank=True, default=0, null=True)),
                ('base_monthly_salary', models.IntegerField(blank=True, default=0, null=True)),
                ('LPP_deduction_employee', models.IntegerField(blank=True, default=0, null=True)),
                ('LPP_deduction_employer', models.IntegerField(blank=True, default=0, null=True)),
                ('employees_phone_allocation', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('employees_representation_allocation', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('expense_report', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, null=True)),
                ('public_transportation_fees', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=6, null=True)),
                ('extraordinary_salary', models.IntegerField(blank=True, default=0, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('seniority', models.DurationField(blank=True, null=True)),
                ('employees_status', models.IntegerField(choices=[(0, 'Active'), (1, 'Inactive')], default=0)),
            ],
            options={
                'ordering': ['start_date'],
                'unique_together': {('first_name', 'last_name')},
            },
        ),
    ]
